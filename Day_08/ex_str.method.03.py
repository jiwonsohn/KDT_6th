# ---------------------------------------------------------------------
# str 데이터 타입 전용 함수 즉, 메서드

#   - 문자열 구성 문자를 검사하는 메서드
#   - isXXXX() --> 논리형 T/F 반환

# isalpha() - 알파벳 구성 문자열 여부 판별
# isupper() - 알파벳 구성 문자열의 대문자 여부 판별
# islower() - 알파벳 구성 문자열의 소문자 여부 판별
# isdecimal() - 숫자로 구성된 문자열 여부 판별
# isalnum() - 숫자와 알파벳이 혼합된 문자열인지 여부 판별
# isspace() - 공백 문자 여부 판별

# ---------------------------------------------------------------------

# -----------------------------------------------------------------------------
# 문자열 구성하는 문자 검사 메서드 => 변수명.isOOO()
# -----------------------------------------------------------------------------
# 문자열 내에 숫자 존재여부 체크 메서드들 3종류
# - 변수명.isnumeric()  : 0~9까지의 숫자, 5¹, 5₁, ①, ➊, ⅒, Ⅳ, ⅳ, 百
# - 변수명.isdigit()    : 0~9까지의 숫자, 5¹, 5₁, ①, ➊ 
# - 변수명.isdecimal()  : 0~9까지의 숫자
#    ==> 실수, 음수, 나머지 : False
# - isdecimal() < isdigit() < isnumeric()
# -----------------------------------------------------------------------------



# isalpha() - 알파벳 구성 문자열 여부 판별 
data = "good"


# isupper() - 알파벳 구성 문자열의 대문자 여부 판별
print(f'{data} => {data.isupper()}')
print(f'"Good" => {"Good".isupper()}')
print(f'"GOOD" => {"GOOD".isupper()}')
'''
good => False
"Good" => False
"GOOD" => True
'''


# islower() - 알파벳 구성 문자열의 소문자 여부 판별
print(f'"GOOD" => {"GOOD".islower()}')
print(f'"Good" => {"Good".islower()}')
print(f'"good" => {"good".islower()}')
'''
"GOOD" => False
"Good" => False
"good" => True
'''

# isdecimal() - 숫자로 구성된 문자열 여부 판별
print(f'1234 => {"1234".isdecimal()}')
print(f'1Happy234 => {"Happy1234".isdecimal()}')
'''
1234 => True
1Happy234 => False
'''

# isalnum() - 숫자와 알파벳이 혼합된 문자열인지 여부 판별
print(f'1234 => {"1234".isalnum()}')
print(f'Happy => {"Happy".isalnum()}')
print(f'Happy1234 => {"Happy1234".isalnum()}')
'''
1234 => True
Happy => True
Happy1234 => True
'''

# isspace() - 공백 문자 여부 판별
print(f'1234 => {"1234".isspace()}')
print(f'     => {"    ".isspace()}')
'''
1234 => False
     => True
'''


# -----------------------------------------------------------------------------
# 문자열 구성하는 문자 검사 메서드 => 변수명.isOOO()
# -----------------------------------------------------------------------------
# 문자열 내에 숫자 존재여부 체크 메서드들 3종류
# - 변수명.isnumeric()  : 0~9까지의 숫자, 5¹, 5₁, ①, ➊, ⅒, Ⅳ, ⅳ, 百
# - 변수명.isdigit()    : 0~9까지의 숫자, 5¹, 5₁, ①, ➊ 
# - 변수명.isdecimal()  : 0~9까지의 숫자
#    ==> 실수, 음수, 나머지 : False
# - isdecimal() < isdigit() < isnumeric()
# -----------------------------------------------------------------------------





